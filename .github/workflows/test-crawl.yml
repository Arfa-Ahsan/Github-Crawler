name: Test Crawler (1000 repos)

on:
  workflow_dispatch:

jobs:
  test-crawl:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_crawler
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup PostgreSQL
        env:
          PGPASSWORD: postgres
        run: |
          for i in {1..15}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting for PostgreSQL ($i)..."
            sleep 2
          done
          psql -h localhost -U postgres -d github_crawler -f database/schema.sql
          psql -h localhost -U postgres -d github_crawler -c "\dt"

      - name: Test Crawl (1000 repos)
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_PAT }}
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: github_crawler
          DB_USER: postgres
          DB_PASSWORD: postgres
        run: |
          echo "ðŸ§ª Testing with 1000 repositories..."
          python -c "from main import crawl_repositories; crawl_repositories(limit=1000)"

          echo "âœ… Checking results..."
          PGPASSWORD=postgres psql -h localhost -U postgres -d github_crawler -c "SELECT COUNT(*) as total FROM repositories;"
      - name: Export test data
        env:
          PGPASSWORD: postgres
        run: |
          psql -h localhost -U postgres -d github_crawler -c "\COPY (SELECT * FROM repositories ORDER BY stars DESC LIMIT 100) TO STDOUT WITH CSV HEADER" > test_repositories.csv
          head -n 11 test_repositories.csv

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-crawler-data
          path: test_repositories.csv
          retention-days: 7
